<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dili.card.dao.IAccountCycleDao">

	<sql id="where_condition">
		<where>
			<if test="firmId != null">AND `firm_id` = #{firmId}</if>
			<if test="userId != null"> AND `user_id` = #{userId}</if>
			<if test="auditorId != null">AND `auditor_id` = #{auditorId} </if>
			<if test="state != null"> AND state = #{state}</if>
		</where>
	</sql>

	<sql id="baseSql">
		SELECT
			`id`,
			`user_id`,
			`user_code`,
			`user_name`,
			`cycle_no`,
			`cash_box`,
			`start_time`,
			`end_time`,
			`check_time`,
			`state`,
			`cash_amount`,
			`auditor_id`,
			`auditor_name`,
			`version`,
			`firm_id`,
			`firm_name`,
			`notes`,
			`create_time`,
			`modify_time`
		FROM
			card_account_cycle
	</sql>

		<!-- 通过条件查询 数量统计-->
	<select id="findCountByCondition" resultType="com.dili.card.entity.AccountCycleDo">
		SELECT
			COUNT(*)
		FROM
			card_account_cycle
		<include refid="where_condition"/>
	</select>

	<insert id="save">
		INSERT INTO card_account_cycle (
			`user_id`,
			`user_code`,
			`user_name`,
			`cycle_no`,
			`cash_box`,
			`start_time`,
			`end_time`,
			`check_time`,
			`state`,
			`cash_amount`,
			`auditor_id`,
			`auditor_name`,
			`version`,
			`firm_id`,
			`firm_name`,
			`notes`,
			`create_time`,
			`modify_time`
		)
		VALUES (
			#{userId},
			#{userCode},
			#{userName},
			#{cycleNo},
			#{cashBox},
			NOW(),
			#{endTime},
			#{checkTime},
			#{state},
			#{cashAmount},
			#{auditorId},
			#{auditorName},
			#{version},
			#{firmId},
			#{firmName},
			#{notes},
			NOW(),
			NOW()
		)
	</insert>

	<select id="getById" resultType="com.dili.card.entity.AccountCycleDo">
		<include refid="baseSql"/>
		WHERE id = #{id}
	</select>

	<select id="findByCondition" parameterType="com.dili.card.dto.AccountCycleDto" resultType="com.dili.card.entity.AccountCycleDo">
		<include refid="baseSql"/>
		<include refid="where_condition"/>
		ORDER BY create_time DESC
	</select>

	<update id="update">
		UPDATE card_account_cycle
	 	<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="userName != null">`user_name` = #{userName}, </if>
			<if test="cycleNo != null">`cycle_no` = #{cycleNo}, </if>
			<if test="cashBox != null">`cash_box` = #{cashBox}, </if>
			<if test="startTime != null">`start_time` = #{startTime}, </if>
			<if test="endTime != null">`end_time` = #{endTime}, </if>
			<if test="checkTime != null">`check_time` = #{checkTime}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="cashAmount != null">`cash_amount` = #{cashAmount}, </if>
			<if test="auditorId != null">`auditor_id` = #{auditorId}, </if>
			<if test="auditorName != null">`auditor_name` = #{auditorName}, </if>
			<if test="version != null">`version` = #{version}, </if>
			<if test="firmId != null">`firm_id` = #{firmId}, </if>
			<if test="firmName != null">`firm_name` = #{firmName}, </if>
			<if test="notes != null">`notes` = #{notes}, </if>
			<if test="modifyTime != null">`modify_time` = NOW()</if>
		</set>
		WHERE
			id = #{id}
	</update>

	<select id="findByUserIdAndState" resultType="com.dili.card.entity.AccountCycleDo">
		<include refid="baseSql"/>
		WHERE user_id = #{userId} and state = #{state}
	</select>
	
	<select id="findLatestActiveCycleByUserId" resultType="com.dili.card.entity.AccountCycleDo">
		<include refid="baseSql"/>
		WHERE user_id = #{userId}
		ORDER BY create_time DESC LIMIT 1
	</select>

	<!-- 更新状态sql -->
	<update id="updateStateById">
		UPDATE card_account_cycle SET
			`state` = #{state},`version` = version + 1, `modify_time` = NOW()
			<if test="state != null and state ==3 ">, `end_time` = NOW() </if>
		WHERE
			id = #{id} and version = #{version}
	</update>

	<update id="updateCashBox">
		UPDATE card_account_cycle SET cash_box = cash_box + #{amount}, version = version + 1, modify_date = NOW() WHERE cycle_no = #{cycleNo} AND version = #{version}
	</update>
</mapper>
