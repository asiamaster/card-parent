<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dili.card.dao.IBusinessRecordDao">


	<insert id="save" parameterType="com.dili.card.entity.BusinessRecordDo" useGeneratedKeys="true">
		INSERT INTO card_business_record (
			`serial_no`,
			`cycle_no`,
			`type`,
			`account_id`,
			`card_no`,
			`customer_id`,
			`customer_no`,
			`customer_name`,
			`hold_name`,
			`start_balance`,
			`amount`,
			`end_balance`,
			`total_balance`,
			`trade_type`,
			`trade_channel`,
			`bank_card_type`,
			`trade_no`,
			`contract_no`,
			`consignor_id`,
			`new_card_no`,
			`deposit`,
			`card_cost`,
			`service_cost`,
			`attach`,
			`operator_id`,
			`operator_no`,
			`operator_name`,
			`operate_time`,
			`notes`,
			`state`,
			`firm_id`,
			`modify_time`,
			`version`,
	        pos_type
		)
		VALUES (
			#{serialNo},
			#{cycleNo},
			#{type},
			#{accountId},
			#{cardNo},
			#{customerId},
			#{customerNo},
			#{customerName},
			#{holdName},
			#{startBalance},
			#{amount},
			#{endBalance},
			#{totalBalance},
			#{tradeType},
			#{tradeChannel},
			#{bankCardType},
			#{tradeNo},
			#{contractNo},
			#{consignorId},
			#{newCardNo},
			#{deposit},
			#{cardCost},
			#{serviceCost},
			#{attach},
			#{operatorId},
			#{operatorNo},
			#{operatorName},
			#{operateTime},
			#{notes},
			#{state},
			#{firmId},
			#{modifyTime},
			#{version},
			#{posType}
		)
	</insert>

	<select id="getById" resultType="com.dili.card.entity.BusinessRecordDo">
		SELECT
			`id`,
			`serial_no`,
			`cycle_no`,
			`type`,
			`account_id`,
			`card_no`,
			`customer_id`,
			`customer_no`,
			`customer_name`,
			`hold_name`,
			`start_balance`,
			`amount`,
			`end_balance`,
			`total_balance`,
			`trade_type`,
			`trade_channel`,
			`bank_card_type`,
			`trade_no`,
			`contract_no`,
			`consignor_id`,
			`new_card_no`,
			`deposit`,
			`card_cost`,
			`service_cost`,
			`attach`,
			`operator_id`,
			`operator_no`,
			`operator_name`,
			`operate_time`,
			`notes`,
			`state`,
			`firm_id`,
			`modify_time`,
			`version`
		FROM
			card_business_record
		WHERE
			id = #{id}
	</select>

	<update id="update">
		UPDATE card_business_record
	 	<set>
			<if test="serialNo != null">`serial_no` = #{serialNo}, </if>
			<if test="cycleNo != null">`cycle_no` = #{cycleNo}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="accountId != null">`account_id` = #{accountId}, </if>
			<if test="cardNo != null">`card_no` = #{cardNo}, </if>
			<if test="customerId != null">`customer_id` = #{customerId}, </if>
			<if test="customerNo != null">`customer_no` = #{customerNo}, </if>
			<if test="customerName != null">`customer_name` = #{customerName}, </if>
			<if test="startBalance != null">`start_balance` = #{startBalance}, </if>
			<if test="amount != null">`amount` = #{amount}, </if>
			<if test="endBalance != null">`end_balance` = #{endBalance}, </if>
			<if test="totalBalance != null">`total_balance` = #{totalBalance}, </if>
			<if test="tradeType != null">`trade_type` = #{tradeType}, </if>
			<if test="tradeChannel != null">`trade_channel` = #{tradeChannel}, </if>
			<if test="bankCardType != null">`bank_card_type` = #{bankCardType}, </if>
			<if test="tradeNo != null">`trade_no` = #{tradeNo}, </if>
			<if test="contractNo != null">`contract_no` = #{contractNo}, </if>
			<if test="consignorId != null">`consignor_id` = #{consignorId}, </if>
			<if test="newCardNo != null">`new_card_no` = #{newCardNo}, </if>
			<if test="deposit != null">`deposit` = #{deposit}, </if>
			<if test="cardCost != null">`card_cost` = #{cardCost}, </if>
			<if test="serviceCost != null">`service_cost` = #{serviceCost}, </if>
			<if test="attach != null">`attach` = #{attach}, </if>
			<if test="operatorId != null">`operator_id` = #{operatorId}, </if>
			<if test="operatorNo != null">`operator_no` = #{operatorNo}, </if>
			<if test="operatorName != null">`operator_name` = #{operatorName}, </if>
			<if test="operateTime != null">`operate_time` = #{operateTime}, </if>
			<if test="notes != null">`notes` = #{notes}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="firmId != null">`firm_id` = #{firmId}, </if>
			<if test="modifyTime != null">`modify_time` = #{modifyTime}, </if>
			<if test="version != null">`version` = #{version}</if>
		</set>
		WHERE
			id = #{id}
	</update>

	<delete id="batchRemove">
		DELETE
		FROM
			card_business_record
		WHERE
			id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<!-- 根据操作流水号重置操作记录为失败 -->
	<update id="doFailureUpdate" parameterType="com.dili.card.entity.BusinessRecordDo">
		update card_business_record set `state` = #{state} where `serial_no` = #{serialNo}
	</update>

	<!-- 根据操作流水号重置操作记录为成功 -->
	<update id="doSuccessUpdate" parameterType="com.dili.card.entity.BusinessRecordDo">
		update card_business_record set `start_balance` = #{startBalance}, `end_balance` = #{endBalance}, `total_balance` = #{totalBalance}, `attach`=#{attach},`state` = #{state} where `serial_no` = #{serialNo}
	</update>

	<!-- 查询业务操作记录列表 -->
	<select id="list" parameterType="com.dili.card.dto.SerialQueryDto" resultType="com.dili.card.entity.BusinessRecordDo">
		SELECT
			`id`,
			`serial_no`,
			`cycle_no`,
			`type`,
			`account_id`,
			`card_no`,
			`customer_id`,
			`customer_no`,
			`customer_name`,
			`hold_name`,
			`start_balance`,
			`amount`,
			`end_balance`,
		    `total_balance`,
			`trade_type`,
			`trade_channel`,
			`bank_card_type`,
			`trade_no`,
			`contract_no`,
			`consignor_id`,
			`new_card_no`,
			`deposit`,
			`card_cost`,
			`service_cost`,
			`attach`,
			`operator_id`,
			`operator_no`,
			`operator_name`,
			`operate_time`,
			`notes`,
			`state`,
			`firm_id`,
			`modify_time`,
			`version`
		FROM
			card_business_record
		where 1 = 1
		<if test="firmId != null">
			and `firm_id` = #{firmId}
		</if>
		<if test="cycleNo != null">
			and `cycle_no` = #{cycleNo}
		</if>
		<if test="accountId != null">
			and `account_id` = #{accountId}
		</if>
		<if test="customerId != null">
			and `customer_id` = #{customerId}
		</if>
		<if test="type != null">
			and `type` = #{type}
		</if>
		<if test="operatorId != null">
			and `operator_id` = #{operatorId}
		</if>
		<if test="state != null">
			and `state` = #{state}
		</if>
		<if test="operateTimeStart != null and operateTimeStart != ''">
			and `operate_time` &gt;= #{operateTimeStart}
		</if>
		<if test="operateTimeEnd != null and operateTimeEnd != ''">
			and `operate_time` &lt;= #{operateTimeEnd}
		</if>
		<if test="operateTypeList != null and operateTypeList.size() > 0">
		    and `type` in
		    <foreach collection="operateTypeList" item="temp" separator="," open="(" close=")">
				#{temp}
			</foreach>
		</if>
		<if test="accountIdList != null and accountIdList.size() > 0">
			and `account_id` in
			<foreach collection="accountIdList" item="temp" separator="," open="(" close=")">
				#{temp}
			</foreach>
		</if>
		<if test="sort != null and sort != '' and order != null and order != ''">
			ORDER BY ${sort} ${order}
		</if>
		<if test="limit != null">
			limit #{limit}
		</if>
	</select>

	<select id="getBySerialNo" resultType="com.dili.card.entity.BusinessRecordDo">
		SELECT
			`id`,
			`serial_no`,
			`cycle_no`,
			`type`,
			`account_id`,
			`card_no`,
			`customer_id`,
			`customer_no`,
			`customer_name`,
			`hold_name`,
			`start_balance`,
			`amount`,
			`end_balance`,
			`total_balance`,
			`trade_type`,
			`trade_channel`,
			`bank_card_type`,
			`trade_no`,
			`contract_no`,
			`consignor_id`,
			`new_card_no`,
			`deposit`,
			`card_cost`,
			`service_cost`,
			`attach`,
			`operator_id`,
			`operator_no`,
			`operator_name`,
			`operate_time`,
			`notes`,
			`state`,
			`firm_id`,
			`modify_time`,
			`version`
		FROM
			card_business_record
		WHERE
			`serial_no` = #{serialNo} limit 1
	</select>
</mapper>
